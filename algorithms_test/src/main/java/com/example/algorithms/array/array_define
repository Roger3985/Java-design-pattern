. 陣列定義：
    在計算機科學中，陣列是由一組元素（值或變量）組成的資料結構，
    每個元素有至少一個索引或鍵來標示。

. 額外補充：
    (1) 因為陣列內的元素是連續存儲的，所以陣列中元素的地址，可以通過其索引計算出來
        例如：int[] array = {1, 2, 3, 4, 5}
    (2) 知道了陣列的資料起始地址為 BaseAddress, 就可以由公式 BaseAddress + i * size 計算出索引 i 元素的地址
        . i 即是索引，在 Java、C 等高等語言中都是從0開始
        . size 是每個元素佔用的字節，例如：int 佔用 4，double 佔用 8
    (3) 靜態陣列：不能插入跟創建元素，創建時就固定陣列的大小（Java原生）
        動態陣列：反之為動態陣列（支持擴充容量：就是創建一個更大的陣列）。ex: arrayList

. 小測驗
    byte[] array = {1, 2, 3, 4, 5}
    已知 array 的資料的起始地址是 0x7138f94c8，那麼元素 3 的地址是什麼？
    答案：0x...4c8 + 2 * 1 = 0x...4ca

. 性能：
    . 空間佔用：
        (1) Java 中陣列結構為
            . 8 個字節 markword（類指針與陣列大小組成）
            . 4 個字節 class 指針（壓縮 class 指針的情況）
            . 4 個字節 陣列大小（決定了陣列的最到容量為2的32平方）
            . 陣列元素 + 對齊字節（Java中所有物件的大小都是 8 個字節的整數倍，不足的要用對齊字節補足）
            例如：int[] array = {1, 2, 3, 4, 5} 的大小為 40的字節，組成如下： 8 + 4 + 4 + 5*4 + 4(alignment)
    . 隨機訪問
        . 根據索引查找元素，時間複雜度是 O(1)