計算機科學中，時間複雜度是用來衡量：一個演算法的執行，隨資料規模增大，而增長的時間成本
. 不依賴於環境因素

如何表示時間複雜度？
 . 假設演算法要處理的資料規模為n，總程式碼的執行行數用f(n)來表示，

 ex:
   . 線性查找演算法函數為 f(n) = 3 * n + 3
   . 二分查找演算法的函數為 f(n) = (floor(log2(n) + 1) * 5 + 4

 . 為了對 f(n) 進行化簡，應當抓住主要矛盾，找到一個變化趨勢與之相近的表示法

空間複雜度？
 . 與時間複雜度類似，一般也使用 big O notation 來衡量：一個演算法的執行隨規模增大，額增加的額外空間成本

總結：二分查找性能
 . 時間複雜度：
    . 最壞情況： O(log n)
    . 最好情況： 如果待查找的元素恰好在陣列中央，只需要循環一次O(1)

 . 空間複雜度
    . 需要常數個指針 i, j, m, 因此額外佔用的空間是 O(1)